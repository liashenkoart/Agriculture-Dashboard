// Import React
import React from "react"
//Import libraries
import PropTypes from "prop-types"
import { makeStyles } from "@material-ui/styles"
import { Card, CardContent, Divider, Grid, Typography } from "@material-ui/core"
import NearMeIcon from "@material-ui/icons/NearMe"
import InvertColorsIcon from "@material-ui/icons/InvertColors"
import WbSunnyIcon from "@material-ui/icons/WbSunny"
import loadAnimation from "../../../../helpers/loadingFunction"

const useStyles = makeStyles((theme) => ({
    root: {
        width: "inherit",
        display: "flex",
        justifyContent: "center",
        boxShadow: theme.palette.effectStyles.backGlowCards.boxShadow,
        borderRadius: "20px",
        position: "relative",
    },
    alert: {
        position: "absolute",
        backgroundColor: theme.palette.colorStyles.positiveAlert,
        width: "inherit",
        color: "white",
        padding: "8px 0",
    },
    cardContent: {
        margin: "32px 0",
        textAlign: "end",
        width: "inherit",
    },
    minTemperature: {
        fontWeight: "200",
    },
    divider: {
        margin: "8px 0 16px",
    },
    icons: {
        height: "12px",
        width: "12px",
        margin: "0 4px 0 0",
    },
    windIcon: {
        transform: "rotate(104deg)",
        margin: "0 4px 4px 0",
    },
}))

const ClimateOverview = (props) => {
    const {
        className,
        alert,
        weatherIcon, // we need to establish a set of icons to use depending on the weather conditions, currently just using the one from figma
        maxTemperature,
        minTemperature,
        wind,
        precipitation,
        daylight,
    } = props

    const classes = useStyles()

    return (
        <Card className={`${classes.root} ${className}`}>
            {alert && (
                <Typography className={classes.alert} align="center" variant="body2">
                    {alert}
                </Typography>
            )}
            <CardContent className={classes.cardContent}>
                <svg width="48" height="31" viewBox="0 0 48 31" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path
                        d="M41.3474 14.5142C41.3484 13.0464 40.9538 11.6058 40.2057 10.3454C39.4576 9.08509 38.3838 8.0521 37.0985 7.35629C35.8132 6.66047 34.3645 6.32782 32.9062 6.3937C31.448 6.45958 30.0347 6.92152 28.8167 7.73042C27.0684 6.16858 24.938 5.10299 22.6445 4.64314C20.3511 4.18329 17.9772 4.34578 15.7668 5.1139C13.5565 5.88202 11.5894 7.22807 10.0677 9.01373C8.54599 10.7994 7.52457 12.9603 7.10841 15.2743C5.10765 15.4546 3.25308 16.4037 1.9305 17.924C0.607929 19.4443 -0.080812 21.4188 0.0075644 23.4367C0.0959408 25.4546 0.95463 27.3606 2.40499 28.7581C3.85536 30.1556 5.78572 30.9371 7.79449 30.9399H35.0434C36.4226 30.9429 37.7718 30.535 38.9206 29.7677C40.0694 29.0004 40.9664 27.908 41.4983 26.6285C42.0303 25.349 42.1733 23.9397 41.9094 22.5786C41.6454 21.2174 40.9863 19.9654 40.0153 18.9805C40.8866 17.6559 41.35 16.1023 41.3474 14.5142ZM33.2718 9.37598C34.196 9.37633 35.1029 9.62858 35.8959 10.1059C36.689 10.5832 37.3385 11.2678 37.7754 12.0867C38.2124 12.9057 38.4204 13.8284 38.3773 14.7568C38.3342 15.6851 38.0417 16.5844 37.5309 17.3589C36.1799 16.8197 34.6921 16.7328 33.2881 17.111C33.1842 14.5562 32.3454 12.0866 30.8734 10.0016C31.6091 9.59673 32.4332 9.38175 33.2718 9.37598ZM35.0538 27.9534H7.79449C7.15248 27.9647 6.51466 27.8474 5.91825 27.6081C5.32184 27.3689 4.77879 27.0126 4.32079 26.5601C3.86279 26.1076 3.49902 25.5679 3.25069 24.9724C3.00237 24.377 2.87448 23.7378 2.87448 23.0922C2.87448 22.4465 3.00237 21.8073 3.25069 21.2119C3.49902 20.6165 3.86279 20.0767 4.32079 19.6242C4.77879 19.1717 5.32184 18.8154 5.91825 18.5762C6.51466 18.337 7.15248 18.2196 7.79449 18.2309C7.86672 18.233 7.93869 18.2405 8.00982 18.2533L8.26525 18.2847C8.46309 18.3052 8.66301 18.2855 8.85315 18.2269C9.04329 18.1682 9.21978 18.0717 9.37214 17.9432C9.52449 17.8146 9.64962 17.6566 9.74009 17.4785C9.83056 17.3004 9.88453 17.1059 9.89879 16.9064C10.0379 14.9544 10.7287 13.0829 11.89 11.5124C13.0512 9.94186 14.6346 8.73764 16.4536 8.04151C18.2726 7.34538 20.2515 7.18632 22.1574 7.58305C24.0632 7.97978 25.8167 8.91579 27.2113 10.2809C27.2711 10.4909 27.3785 10.6841 27.5251 10.8453C27.6718 11.0064 27.8536 11.1312 28.0563 11.2097C28.9705 12.3339 29.6328 13.6431 29.998 15.048C30.3632 16.453 30.4227 17.9206 30.1725 19.3508C30.1238 19.6483 30.1658 19.9536 30.2929 20.2266C30.4201 20.4996 30.6264 20.7275 30.8848 20.8804C31.1432 21.0333 31.4416 21.1039 31.7407 21.083C32.0397 21.0621 32.3255 20.9507 32.5604 20.7634C33.2625 20.1892 34.1385 19.8732 35.0434 19.8675C35.5715 19.8675 36.0945 19.9721 36.5824 20.1753C37.0703 20.3785 37.5136 20.6764 37.887 21.0519C38.2605 21.4274 38.5567 21.8731 38.7588 22.3637C38.9609 22.8544 39.0649 23.3802 39.0649 23.9112C39.0649 24.4422 38.9609 24.9681 38.7588 25.4587C38.5567 25.9493 38.2605 26.395 37.887 26.7705C37.5136 27.146 37.0703 27.4439 36.5824 27.6471C36.0945 27.8503 35.5715 27.9549 35.0434 27.9549L35.0538 27.9534Z"
                        fill="#1D2934"
                    />
                    <path
                        d="M28.3434 4.53739C28.4852 4.89904 28.7616 5.19087 29.1139 5.35087C29.4662 5.51086 29.8667 5.52639 30.2302 5.39418C30.5937 5.26196 30.8917 4.99241 31.0607 4.64281C31.2297 4.29321 31.2565 3.89112 31.1353 3.52198L30.2176 0.983468C30.151 0.799138 30.0489 0.629803 29.9172 0.485132C29.7855 0.34046 29.6268 0.223285 29.4501 0.140296C29.0932 -0.0273061 28.6847 -0.0454841 28.3145 0.0897611C27.9443 0.225006 27.6426 0.502596 27.476 0.861464C27.3093 1.22033 27.2912 1.63108 27.4257 2.00335L28.3434 4.53739Z"
                        fill="#1D2934"
                    />
                    <path
                        d="M46.3175 14.5714L43.6741 14.101C43.2861 14.0323 42.8869 14.1214 42.5643 14.3486C42.2417 14.5759 42.022 14.9227 41.9537 15.3128C41.8853 15.7029 41.9739 16.1043 42.1999 16.4287C42.4259 16.7531 42.7708 16.974 43.1588 17.0427L45.8021 17.5116C45.8878 17.5277 45.9749 17.5357 46.062 17.5355C46.4336 17.5353 46.7915 17.395 47.0652 17.1425C47.339 16.8899 47.5086 16.5433 47.5407 16.1711C47.5728 15.799 47.4649 15.4282 47.2385 15.1321C47.012 14.8359 46.6834 14.6359 46.3175 14.5714Z"
                        fill="#1D2934"
                    />
                    <path
                        d="M42.1962 10.0921C42.4571 10.0924 42.7134 10.0228 42.9387 9.8905L45.2613 8.54658C45.5996 8.34716 45.8457 8.02128 45.9459 7.64006C46.0462 7.25884 45.9924 6.85323 45.7963 6.51175C45.6002 6.17026 45.2778 5.92062 44.8993 5.81731C44.5209 5.71399 44.1171 5.76539 43.7762 5.96028L41.4536 7.3042C41.1705 7.46857 40.9493 7.72226 40.8242 8.02595C40.6991 8.32963 40.6772 8.66633 40.7618 8.98383C40.8464 9.30134 41.0328 9.58189 41.2922 9.782C41.5515 9.98211 41.8693 10.0906 42.1962 10.0906V10.0921Z"
                        fill="#1D2934"
                    />
                    <path
                        d="M36.2871 5.43746C36.4705 5.50427 36.6652 5.5341 36.8601 5.52524C37.055 5.51637 37.2462 5.46898 37.4229 5.38578C37.5995 5.30258 37.7582 5.18519 37.8897 5.04033C38.0212 4.89547 38.1231 4.72597 38.1894 4.54151L39.1072 2.003C39.2365 1.63191 39.2151 1.22451 39.0475 0.869233C38.8799 0.513953 38.5798 0.239474 38.2122 0.105381C37.8446 -0.0287123 37.4392 -0.0115948 37.084 0.153017C36.7289 0.317629 36.4527 0.616449 36.3153 0.984604L35.3976 3.52312C35.3309 3.70754 35.3009 3.90337 35.3095 4.09942C35.3182 4.29547 35.3651 4.48789 35.4477 4.66569C35.5303 4.84348 35.647 5.00315 35.791 5.13558C35.935 5.268 36.1036 5.37058 36.2871 5.43746Z"
                        fill="#1D2934"
                    />
                </svg>
                {loadAnimation(
                    maxTemperature,
                    true,
                    <div>
                        <Typography align="left" variant="h4">
                            {maxTemperature}
                        </Typography>
                        <Typography className={classes.minTemperature} align="left" variant="h4">
                            {minTemperature}
                        </Typography>
                    </div>
                )}
                <Divider className={classes.divider} />
                {loadAnimation(
                    wind,
                    true,
                    <div>
                        {wind && (
                            <Grid container alignItems="center">
                                <NearMeIcon className={`${classes.windIcon} ${classes.icons}`} />
                                <Typography align="left" variant="body1">
                                    {wind}
                                </Typography>
                            </Grid>
                        )}
                        {precipitation && (
                            <Grid container alignItems="center">
                                <InvertColorsIcon className={`${classes.icons}`} />
                                <Typography align="left" variant="body1">
                                    {precipitation}
                                </Typography>
                            </Grid>
                        )}
                        {daylight && (
                            <Grid container alignItems="center">
                                <WbSunnyIcon className={`${classes.icons}`} />
                                <Typography align="left" variant="body1">
                                    {daylight}
                                </Typography>
                            </Grid>
                        )}
                    </div>
                )}
            </CardContent>
        </Card>
    )
}

ClimateOverview.propTypes = {
    className: PropTypes.string,
    temperature: PropTypes.number,
}

export default ClimateOverview
